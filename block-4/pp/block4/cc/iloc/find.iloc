start:  loadI 2 => r_2
        loadI 0 => r_i
        in "x" => r_x
        loadI @alength => r_len
for:    cmp_LT r_i,r_len => r_cmp
        cbr r_cmp -> if, end
if:     i2i r_i => r_a             // compute address of a[i]
        multI r_a,4 => r_a         // multiply by size of int
        addI r_a,@a => r_a         // add a's base offset
        loadAO r_arp,r_a => r_ai   // r_ai <- a[i]
        cmp_EQ r_ai ,r_x => r_cmp
        cbr r_cmp -> end, for_end
for_end: loadI 1 => r_1
        add r_1, r_i => r_i
        jumpI -> for
end:    out "I: ", r_i